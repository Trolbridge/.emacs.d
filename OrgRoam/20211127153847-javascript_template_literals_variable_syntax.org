:PROPERTIES:
:ID:       08E635B9-F85C-42EC-A8FC-2EA3E8896F8E
:END:
#+title: JavaScript Template Literals ${variable} syntax


* Template Literals ${} syntax

#+begin_src js :results output

  var number = 33;
  var color = 'green';

  console.log(`${number} ${color} apples`);

#+end_src

#+RESULTS:
: 33 green apples

* Object Literals

#+begin_src js :results output

  const person = {
  firstName: 'Steve',
  lastName: 'Smith',
  age: 36,
  email: 'steve@aol.com',
  hobbies: ['music', 'sports'],
  address: {
    city: 'Miami',
    state: 'FL'
  },
  getBirthYear: function(){
    return 2017 - this.age;
  }
}

let val;

val = person;
// Get specific value
val = person.firstName;
val = person['lastName'];
val = person.age;
val = person.hobbies[1];
val = person.address.state;
val = person.address['city'];
val = person.getBirthYear();

console.log(val);

const people = [
  {name: 'John', age: 30},
  {name: 'Mike', age: 23},
  {name: 'Nancy', age: 40}
];

for(let i = 0; i < people.length; i++){
  console.log(people[i].name);
}
#+end_src

* Template Literals 

- Should be compatible with all modern borrowers.

#+begin_src js :results output

  const name = 'John';
  const age = 30;
  const job = 'Web Developer';
  const city = 'Miami';

  let html;
        
  function hello() {
      return 'Hello!!!!';
  }

  html = `
      <ul>
          <li>Name: ${name}</li>
          <li>Age: ${age}</li>
          <li>Job: ${job}</li>
          <li>City: ${city}</li>
          <li>${2 + 2}</li>
          <li>${hello()}</li>
          <li>${hello}</li>
          <li>${age > 29 ? 'Over 30' : 'Under 30'}</li>
      </ul> 
      `;

  document.body.innerHTML = html;

#+end_src
