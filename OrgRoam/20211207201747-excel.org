:PROPERTIES:
:ID:       45C3BABC-D751-4B4C-B4B2-40852FBB773B
:END:

#+title: Excel

[[id:45C3BABC-D751-4B4C-B4B2-40852FBB773B][Excel]]



* HotKeys

|------------------+----------------------|
| OPT + F11        | Visual Basic         |
| OPT + F8         | Macros               |
| CTRL + + CMD + R | Get Project Explorer |
| F6               | Get Properties       |
| Shift + CMD + I  | Step Into/Through    |
| CRTRL + CMD + G  | Immediate Window     |
|                  |                      |

Range 1 or more cells

* First Exercise



#+begin_src ruby :results output

    Sub Excercise1()
  '
  ' Excercise1 Macro
  '

  '
  Columns("A:E").WrapText = False

  Range("a1") = "ID"
  Range("b1") = "First Name"
  Range("c1") = "Last Name"

  Dim rngCol As Range
  With Columns("A:E")
    
      .AutoFit
    
      For Each rngCol In .Columns
          If rngCol.ColumnWidth > 25 Then rngCol.ColumnWidth = 25
      Next rngCol
    
      For Each rngCol In .Columns
          If rngCol.ColumnWidth < 10 Then rngCol.ColumnWidth = 10
      Next rngCol
    
      Columns().WrapText = True
      Rows(1).Font.Bold = True
      Rows(1).HorizontalAlignment = xlCenter
  End With

  End Sub
  
#+end_src

* Section 2 Range Properties
** Properties 

debug.Print range("f2").text
debug.Print typename(range("f2").text)
debug.Print typename(range("f2").value)
bold, italic, underline
.Font.Underline = true

** My Format Macro

#+begin_src ruby :results output

      Sub Format1()
  '
  ' Format1 Macro
  '

  '
  Columns("A:B").WrapText = False

  Range("a1") = "ID"
  Range("b1") = "First Name"
  

  Dim rngCol As Range

  With Columns("A:B")
    
      .AutoFit
    
      For Each rngCol In .Columns
          If rngCol.ColumnWidth > 25 Then rngCol.ColumnWidth = 25
      Next rngCol
    
      For Each rngCol In .Columns
          If rngCol.ColumnWidth < 10 Then rngCol.ColumnWidth = 10
      Next rngCol
    
      Columns().WrapText = True
      Rows(1).Font.Bold = True
      Rows(1).HorizontalAlignment = xlCenter
      
      Range("A2") = "1"
      Range("A3") = "2"
      Range("A4") = "3"
      Range("B2") = "Name1"
      Range("B3") = "Name2"
      Range("B4") = "Name3"

      Range("C1").select

  End With

  End Sub

#+end_src

** Section 2 Q 2

#+begin_src ruby :results output

Sub Exercise02A()
  Range("a1") = "ID"
  Range("b1") = "Name"
  Range("c1") = "Sales"

  Range("a2") = "1"
  Range("b2") = "Name1"

  Range("a3") = "2"
  Range("b3") = "Name2"

  Range("a4") = "3"
  Range("b4") = "Name3"

  'Add Lines
  Range("c2") = 10
  Range("c3") = 13
  Range("c4") = 21
  Range("c5") = "=SUM(c2:c4)"
  Range("c2:c5").NumberFormat = "0.00"
  ' Create line
  Worksheets("Sheet1").Range("C5").Borders(xlEdgeTop).LineStyle = xlContinuous
  
  ' headers bold
  Range("a1:c1").Font.Bold = True
  Range("c1").Select
  
End Sub

#+end_src

** Color 
4 ways


Range("a1").Font.Color = VBA.ColorConstants.
Range("a1").Font.Color = excel.rgb
Range("a1").Font.Color = rgb(0, 150, 255)
** For background
Range("a1").inter0.1)

** Test a color value
? excel.rgbAntiqueWhite


** Font Collection
* Section 3 Cells() Object 
Can be used to effect all cells on a sheet
Cells(Row/Column)
Cells(1, 2) = 50
Cells(1, "b") = 50
=column()
Range("a2:b10").Cells(16) = 20
Selection.Cells(4) = "hello"
Selection.Cells(4) = "dan"

sub allCells()
Cells.select
** Combine Range + Cell
range (   cells(1,2), cells(4,3)    ) = 50
* Section 4 Variables

