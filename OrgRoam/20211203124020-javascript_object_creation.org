:PROPERTIES:
:ID:       BB097FFA-2269-42DC-8411-E6BAE5CFCF5B
:END:
#+title: JavaScript Object Creation


[[id:B178F57B-461C-4AF3-A52E-941A3D72571F][JavaScript]]


* Create Empty Objects

#+begin_src js :results output

  // THIS IS JUST A TEMPLATE

  // Objects Literal - single object (Singleton)
  let emptyObject = {...};

  // Object Constructor Function - multiple instances
  function Person() {...};
  let person2 = new Person('Wally', 35);

  // Arrays
  let emptyArray = [...];

  // functions
  let emptyFunction = function() {};

#+end_src

#+RESULTS:

* 4 ways to create objects:

** #1 Literals
*** Object literal
- Also known as an object initializer to stay consistent with terminology used in C++
- Easiest - define property values inside curly braces {}
- Use a , to seperate

  
*** Object with properties and methods 

#+begin_src js :results output

    // object with properties and methods
  let Person = {
      firstName: "Clyde",
      age: 35,
      message: function() {
          console.log(`${this.firstName} is ${this.age} years old`);
          }
      };
   
  console.log(Person);
  console.log(Person.message());


#+end_src

#+RESULTS:
: { firstName: 'Clyde', age: 35, message: [Function: message] }
: Clyde is 35 years old
: undefined

** #2 Constructors
[[id:3052FD81-F554-43D8-8F1A-4D940244C4ED][JavaScript Object Constructor Function]] 

** #3 Object.create() method
*** JavaScript Object.create()
Creates a new object, using another object as its prototype
Can do this without having to define a constructor function - no new keyword

Object.create( prototype, properties )
                       mandatory  optional


#+begin_src js :results output
  let dog = Object.create(null);
  console.log(dog);

  dog.name = "Fluffy";
  console.log(dog);


  // Dog Object Prototype

  dogProt = {
      woof: function() {
          console.log(this.sound)
      }
  };

  let doggy = Object.create(dogProt);
  console.log(doggy);
  console.log(doggy.woof());

  doggy.sound = 'Ruff';
  console.log(doggy.woof());
  doggy.woof();

  // with Optional parameters

  let dog2 = Object.create(dogProt, {
      'sound': {
          value: 'bow wow'
      }

  });

  dog2.woof();

  // console.log(dog2.woof());

#+end_src

#+RESULTS:

** #4
*** ES2015 Class
